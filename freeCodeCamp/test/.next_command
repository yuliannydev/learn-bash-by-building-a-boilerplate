echo hello terminal
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
pwd
ls --color=auto
cd freeCodeCamp/
__vsc_prompt_cmd_original
freeCodeCamp
pwd
ls --color=auto
__vsc_prompt_cmd_original
cd test/
pwd
ls --color=auto
pwd
cd ..
ls --color=auto
more package.json
__vsc_prompt_cmd_original
clear
ls --color=auto
cd node_modules/
ls --color=auto
ls --color=auto -l
ls --color=auto -l has
more has
ls --color=auto -l has
cd has
ls --color=auto
more README.md
ls --color=auto
more LICENSE-MIT
clear
ls --color=auto
cd src/
pwd
cd worspace
ls --color=auto
more index.js
pwd
cd ..
cd ..
pwd
cd ../..
ls --color=auto
clear
mkdir website
ls --color=auto
cd website/
ls --color=auto
echo hello website
touch index.htl
touch index.html
ls --color=auto
rm index.htl
ls --color=auto
touch styless.css
touch styles.css
rm styless.css
ls --color=auto
touch index.js
touch .gitignore
ls --color=auto
command --help
__vsc_prompt_cmd_original
ls --color=auto --help
ls --color=auto --all
cd ,
cd .
touch background.jpg
touch header.jpg
touch header.png
ls --color=auto
rm header.jpg
touch footer.jpeg
ls --color=auto
touch roboto.font
touch lato.font
touch menlo.font
ls --color=auto
touch codeAlly.svg
touch CodeAlly.svg
rm codeAlly.svg
touch CodeRoad.svg
touch freeCodeCamp.svg
ls --color=auto
mkdir images
ls --color=auto
cp background.jpg /images
cp background.jpg images
cd images/
ks
ls --color=auto
__vsc_prompt_cmd_original
cd ..
__vsc_prompt_cmd_original
ls --color=auto
rm background.jpg
ls --color=auto
cp header.png images/
cp footer.jpeg images/
cd images/
ls --color=auto
cd ..
__vsc_prompt_cmd_original
ls --color=auto
rm header.png
rm footer.jpeg
ls --color=auto
mv roboto.font roboto.woff
ls --color=auto
mv lato.font lato.ttf
mv menlo.font menlo.otf
Ã±s
ls --color=auto
mkdir fonts
ls --color=auto
mv lato.ttf fonts
mv lato.ttf /fonts
mv roboto.ttf fonts
mv roboto.woff fonts
ls --color=auto
fee
find
ls --color=auto
ls --color=auto
cd fonts/
ls --color=auto
mv lato.ttf website
cd ..
ls --color=auto
ls --color=auto
mv lato.ttf fonts
ls --color=auto -a
ls --color=auto -al
cd fonts/
ls --color=auto
ls --color=auto
cd ..
ls --color=auto
cd fonts/
ls --color=auto
rm -rf website
..
cd ..
ls --color=auto
touch lato.ttf
mv lato.ttf fonts
mv menlo.otf fonts
find
mkdir clieng
mkdir client
rm -rf clieng
ls --color=auto
cd client/
mkdir src
ls --color=auto
..
cd ..
rm -rf client/src/
mkdir client/src
__vsc_prompt_cmd_original
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
git add .
git commit
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
echo -n e4f388ba-4a58-42ca-8510-1ff4a524ea2a
cat /proc/self/environ
echo -n e4f388ba-4a58-42ca-8510-1ff4a524ea2a
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
'/vscode/vscode-server/bin/linux-x64/4849ca9bdf9666755eb463db297b69e5385090e3/node' -p '"e91f2d6b68eb" + JSON.stringify(process.env) + "e91f2d6b68eb"'
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
..
cd ..
ls --color=auto
cd project/
git add .
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
echo -n 1cb9e2be-eb5d-4c4b-9f5f-9319b9ea79fc
cat /proc/self/environ
echo -n 1cb9e2be-eb5d-4c4b-9f5f-9319b9ea79fc
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
'/vscode/vscode-server/bin/linux-x64/4849ca9bdf9666755eb463db297b69e5385090e3/node' -p '"7bf2e738141d" + JSON.stringify(process.env) + "7bf2e738141d"'
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
echo -n 786037df-6a37-4c8e-a167-03f661ae7e07
cat /proc/self/environ
echo -n 786037df-6a37-4c8e-a167-03f661ae7e07
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
ls --color=auto
cd website/
ls --color=auto
mv intex.html /client/scr
mv intex.html /client/src
ls --color=auto
pwq
owd
pwd
ls --color=auto
cd client/
ls --color=auto
cd src
ls --color=auto
cd ..
cd ..
mv index.html client/src
find
mv index.js client/src
mv styles.css client/src
find
find client
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
echo -n 2e85e1e3-fb88-463f-96f7-c4e54aa4f7ef
cat /proc/self/environ
echo -n 2e85e1e3-fb88-463f-96f7-c4e54aa4f7ef
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
'/vscode/vscode-server/bin/linux-x64/4849ca9bdf9666755eb463db297b69e5385090e3/node' -p '"6974163fe127" + JSON.stringify(process.env) + "6974163fe127"'
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
find client
ls --color=auto
cd website/
ls --color=auto
find client
find --help
find -name
find -name index.html
find -name styles.css
find -name scr
find -name src
find
cd client
mkdir assets
cd assets/
mkdir images
__vsc_prompt_cmd_original
cd images/
touch background.jpg
..
cd ..
cd ..
cd ..
ls --color=auto
cd client/
ls --color=auto
cd assets/
ls --color=auto
cd images/
ls --color=auto
cd ../../..
ls --color=auto
cd client/
ls --color=auto
..
cd ..
cd images/
ls --color=auto
mv header.png website
ls --color=auto
ls --color=auto -al website
rm website
..
cd ..
ls --color=auto
cd images/
ls --color=auto
touch header.png
ls --color=auto
mv header.png ../website
ls --color=auto
cd ..
ls --color=auto
__vsc_prompt_cmd_original
rm website
cd images/
ls --color=auto
touch header.png
ls --color=auto
mv header.png ../
..
cd ..
ls --color=auto
find images
cd client/
cd assets/
ls --color=auto
find imahes{
find images
ls --color=auto
cd images/
ls --color=auto
cd ..
ls --color=auto
cd images/
ls --color=auto
..
cd ..
cd ..
cd ..
ls --color=auto
cd images/
ls --color=auto
cd ..
ls --color=auto
cd client/assets/images/
find
cd ..
cd ..
cd ..
ls --color=auto
cd ..
ls --color=auto
cd website/
cd client
cd assets/
cd images/
cd ..
cd..
cd ..
cd ..
find -name images
ls --color=auto
cd images/
ls --color=auto
cd ..
cd ..
cd website/
cd images/
ls --color=auto
cd ..
ls --color=auto
cd client/
ls --color=auto
cd assets/
ls --color=auto
cd images/
ls --color=auto
cd ..
cd ..
cd ..
ls --color=auto
cd images/+
cd images
ls --color=auto
pwd
mv header.png ../
touch header.png
mv header.png ../client/assets/images
find header.png
find
cd ..
find
find --name header.png
find -name header.png
cd images/
ls --color=auto
mv footer.jpeg ../client/assets/images/
ls --color=auto
find -name footer.jpeg
__vsc_prompt_cmd_original
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
cd ..
cd client/
ls --color=auto
cd assets/
ls --color=auto
cd images/
ls --color=auto
mv footer.jpeg ../../..
cd ..
mv footer.jpeg images/
find -name footer.jpeg
ls --color=auto
ls --color=auto
cd ..
cd ..
cd ..
cd images/
mv footer.jpeg ../client/assets/images/
pwd
mv footer.jpeg client/assets/images/
mv footer.jpeg /client/assets/images/
ls --color=auto
ls --color=auto
..
cd ..
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
echo -n c925bda6-478b-4313-8f28-f1d30120be13
cat /proc/self/environ
echo -n c925bda6-478b-4313-8f28-f1d30120be13
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
'/vscode/vscode-server/bin/linux-x64/4849ca9bdf9666755eb463db297b69e5385090e3/node' -p '"f69e599529f8" + JSON.stringify(process.env) + "f69e599529f8"'
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
pwd
ls --color=auto
cd website/
ls --color=auto
cd images/
ls --color=auto
mv footer.jpeg ../client/assets/images/
cd ..
cd ..
ls --color=auto
cd website/
ls --color=auto
cd images/
ls --color=auto
touch footer.jpeg
mv footer.jpeg client/assets/images/
ls --color=auto
mv footer.jpeg ../client/assets/images/
ls --color=auto
touch footer.jpeg
ls --color=auto
mv footer.jpeg client/assets/images
..
cd ..
mv images/footer.jpeg client/assets/images/
find -name client/assets/images
find -name images
find
rmdir images/
rmdir images/background.jpg
cd im
cd images/
ls --color=auto
rm background.jpg
cd ..
rmdir images/
find
cd ..
find
cd website/
ls --color=auto
cd client/
cd a
cd assets/
mkdir icons
ls --color=auto
ls --color=auto
rmdir icons
ls --color=auto
cd ..
cd ..
mkdir client/assets/icons
mv CodeAlly.svg client/assets/icons
find
find -name icons
ls --color=auto
mv CodeRoad.svg /client/assets/icons
mv CodeRoad.svg client/assets/icons
mv freeCodeCamp.svg client/assets/icons
find
mkdir client/assets/fonts
touch client/assets/fonts/roboto-bold.woff
touch client/assets/fonts/roboto-light.woff
find client/assets/fonts/
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
231
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
echo -n 93c768aa-0574-4827-bdfe-90f99c62ee02
cat /proc/self/environ
echo -n 93c768aa-0574-4827-bdfe-90f99c62ee02
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
'/vscode/vscode-server/bin/linux-x64/4849ca9bdf9666755eb463db297b69e5385090e3/node' -p '"2464cc53a694" + JSON.stringify(process.env) + "2464cc53a694"'
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
ls --color=auto
cd website/
ls --color=auto
find
touch client/assets/fonts/lato-bold.ttf
touch client/assets/fonts/lato-light.ttf
